tm_lines(col = "Name", palette = pal, lwd=2) +
tm_shape(points) +
tm_dots(col = "grey", size = 0.05)
tm_shape(routes) +
tm_lines(col = "Name", palette = pal, lwd=2) +
tm_shape(points) +
tm_dots(col = "grey15", size = 0.05)
tm_shape(routes) +
tm_lines(col = "Name", palette = pal, lwd=2) +
tm_shape(points) +
tm_dots(col = "grey15", size = 0.05,
border.col = "white", border.lwd = 2)
tm_shape(routes) +
tm_lines(col = "Name", palette = pal, lwd=3) +
tm_shape(points) +
tm_dots(col = "grey15", size = 0.05,
border.col = "white", border.lwd = 3)
tm_shape(routes) +
tm_lines(col = "Name", palette = pal, lwd=3) +
tm_shape(points) +
tm_dots(col = "grey15", size = 0.05,
border.col = "#FFFFFF", border.lwd = 3)
tm_shape(routes) +
tm_lines(col = "Name", palette = pal, lwd=3) +
tm_shape(points) +
tm_dots(col = "grey15", size = 0.05,
border.col = "#008ba6", border.lwd = 3)
tm_shape(routes) +
tm_lines(col = "Name", palette = pal, lwd=3) +
tm_shape(points) +
tm_dots(col = "008ba6", size = 0.05,
border.col = "#white", border.lwd = 3)
tm_shape(routes) +
tm_lines(col = "Name", palette = pal, lwd=3) +
tm_shape(points) +
tm_dots(col = "008ba6", size = 0.05,
border.col = "white", border.lwd = 3)
tm_shape(routes) +
tm_lines(col = "Name", palette = pal, lwd=3) +
tm_shape(points) +
tm_dots(col = "#008ba6", size = 0.05,
border.col = "white", border.lwd = 3)
tm_shape(routes) +
tm_lines(col = "Name", palette = pal, lwd=3) +
tm_shape(points) +
tm_dots(col = "#008ba6", size = 0.05,
border.col = "white", border.lwd = 1) +
tm_add_legend(type = "fill", col = "#008ba6",
labels = "Routing Test Points")
ggplot(routes_table, aes(fill=Scenario, y=Total_Tran, x=Route)) +
geom_bar(position="dodge", stat="identity") +
xlab("Route") + ylab("Travel Time (min.)") +
scale_fill_rpg(palette = "logo") +
theme_minimal()
```{r results = "asis"}
print(kable(routes_table, col.names = c("Scenario", "Route", "Travel Time (min.)"),
digits = 2) %>%
kable_styling())
```{r results = "asis"}
print(kable(routes_table, col.names = c("Scenario", "Route", "Travel Time (min.)"),
digits = 2)  %>%
kable_paper("hover", full_width = F))
md_counties <- counties(state = "MD", cb = T,
progress_bar = FALSE) %>%
st_transform(2248) %>%
dplyr::select(NAME) %>%
rename(county = NAME)
study_area_analysis <- ms_dissolve(filter(score_summary_sf, study_zone == "yes")) %>%
select(-rmapshaperid) %>%
st_intersection(md_counties) %>%
mutate(sq_miles = as.numeric(st_area(.))/27878400)
score_summary_sf <- left_join(zones, score_summary,
by = c("LVL_2_NEW" = "origin")) %>%
filter(study_zone == "yes")
score_summary <- read_csv("K:\\Models\\MDOT_MMA\\Chapter30_Scoring\\Ch30_2021\\MMA_scores\\summarise\\summarized_scores.csv")
zones <- st_read("K:\\Models\\MDOT_MMA\\Chapter30_Scoring\\Ch30_2021\\Land_use\\Lvl_2_Zones_12192017.shp",
quiet = T) %>%
dplyr::select(LVL_2_NEW, ACRES, FIPS, COUNTY, MD_REGION) %>%
st_transform(2248) %>%
ms_simplify()
score_summary_sf <- left_join(zones, score_summary,
by = c("LVL_2_NEW" = "origin")) %>%
filter(study_zone == "yes")
study_area_boundary <- ms_dissolve(filter(score_summary_sf, study_zone == "yes"))
# Chunk 1: setup
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE, cache = TRUE)
require(sf)
require(tmap)
require(rmapshaper)
require(dplyr)
require(kableExtra)
require(readr)
require(tidyr)
require(rpgcolorsr)
require(classInt)
require(tigris)
require(janitor)
options(scipen=999)
# Chunk 2: read in stops
stops_file <- "K:\\Models\\MDOT_MMA\\Chapter30_Scoring\\Ch30_2021\\GTFS\\New_Project_Feeds\\AnneArundelCounty2021\\AnneArundelCounty_2021_Stops.shp"
stops <- st_read(stops_file,
quiet = TRUE) %>%
st_transform(2248)
# Chunk 3: read in mma results
score_summary <- read_csv("K:\\Models\\MDOT_MMA\\Chapter30_Scoring\\Ch30_2021\\MMA_scores\\summarise\\summarized_scores.csv")
zones <- st_read("K:\\Models\\MDOT_MMA\\Chapter30_Scoring\\Ch30_2021\\Land_use\\Lvl_2_Zones_12192017.shp",
quiet = T) %>%
dplyr::select(LVL_2_NEW, ACRES, FIPS, COUNTY, MD_REGION) %>%
st_transform(2248) %>%
ms_simplify()
score_summary_sf <- left_join(zones, score_summary,
by = c("LVL_2_NEW" = "origin")) %>%
filter(study_zone == "yes")
study_area_boundary <- ms_dissolve(filter(score_summary_sf, study_zone == "yes"))
# Chunk 4
study_area_analysis %>%
st_drop_geometry() %>%
adorn_totals(where = "row", fill = "-", na.rm = TRUE, name = "Total") %>%
kbl(col.names = c("County", "Sq. Miles in Study Area"), digits = 2) %>%
kable_paper("hover", full_width = F)
# Chunk 5: study area map
md_counties <- counties(state = "MD", cb = T,
progress_bar = FALSE) %>%
st_transform(2248) %>%
dplyr::select(NAME) %>%
rename(county = NAME)
study_area_analysis <- ms_dissolve(filter(score_summary_sf, study_zone == "yes")) %>%
select(-rmapshaperid) %>%
st_intersection(md_counties) %>%
mutate(sq_miles = as.numeric(st_area(.))/27878400)
tmap_mode("view")
tm_shape(study_area_analysis) +
tm_borders(col = "#8400a8", lwd = 1.5) + tm_fill(alpha = 0.5, col = "county") +
tm_shape(stops) + tm_dots(col = "white") +
tm_add_legend(type = "fill", col  = "#8400a8", labels = "Study Area Boundary") +
tm_basemap ("Esri.WorldStreetMap")
# Chunk 6: base and build mma mapping
pal <- rpg_color_pal("rpg_colors")(17)
breaks <- classIntervals(score_summary_sf$build, 17, style = "jenks")
nobuild_map <- tm_shape(score_summary_sf) +
tm_polygons("nobuild",
title = "Base Accessibility to Jobs",
palette = pal, style = "fixed",
breaks = breaks$brks,
lwd = 0.5, alpha = 0.9,
id = "change", textNA = "NA") +
tm_shape(study_area_boundary) +
tm_borders(col = "#8400a8", lwd = 1.5) +
tm_add_legend(type = "fill", col  = "#8400a8",
labels = "Study Area Boundary") +
tm_shape(stops) +
tm_dots(col = "#58585B", id = "stop_name",
popup.vars = "stop_name",
labels = "Project Stops", scale = 1,
border.col = "white") +
tm_basemap ("Esri.WorldGrayCanvas")
build_map <- tm_shape(score_summary_sf) +
tm_polygons("build",
title = "Build Accessibility to Jobs",
style = "fixed", palette = pal,
breaks = breaks$brks,
lwd = 0.5, alpha = 0.9,
id = "change", textNA = "NA") +
tm_shape(study_area_boundary) +
tm_borders(col = "#8400a8", lwd = 1.5) +
tm_add_legend(type = "fill", col  = "#8400a8",
labels = "Study Area Boundary") +
tm_shape(stops) +
tm_dots(col = "#58585B", id = "stop_name",
popup.vars = "stop_name",
labels = "Project Stops", scale = 1,
border.col = "white") +
tm_basemap ("Esri.WorldGrayCanvas")
tmap_arrange(nobuild_map, build_map, sync = T, ncol = 1)
unlink("reasonableness-of-results_cache", recursive = TRUE)
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)
require(sf)
require(tmap)
require(rmapshaper)
require(dplyr)
require(kableExtra)
require(readr)
require(tidyr)
require(rpgcolorsr)
require(classInt)
require(tigris)
require(janitor)
options(scipen=999)
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)
require(sf)
require(tmap)
require(rmapshaper)
require(dplyr)
require(kableExtra)
require(readr)
require(tidyr)
require(rpgcolorsr)
require(classInt)
require(tigris)
require(janitor)
options(scipen=999)
stops_file <- "K:\\Models\\MDOT_MMA\\Chapter30_Scoring\\Ch30_2021\\GTFS\\New_Project_Feeds\\AnneArundelCounty2021\\AnneArundelCounty_2021_Stops.shp"
stops <- st_read(stops_file,
quiet = TRUE) %>%
st_transform(2248)
score_summary <- read_csv("K:\\Models\\MDOT_MMA\\Chapter30_Scoring\\Ch30_2021\\MMA_scores\\summarise\\summarized_scores.csv")
zones <- st_read("K:\\Models\\MDOT_MMA\\Chapter30_Scoring\\Ch30_2021\\Land_use\\Lvl_2_Zones_12192017.shp",
quiet = T) %>%
dplyr::select(LVL_2_NEW, ACRES, FIPS, COUNTY, MD_REGION) %>%
st_transform(2248) %>%
ms_simplify()
score_summary_sf <- left_join(zones, score_summary,
by = c("LVL_2_NEW" = "origin")) %>%
filter(study_zone == "yes")
study_area_boundary <- ms_dissolve(filter(score_summary_sf, study_zone == "yes"))
tmap_mode("view")
route_file <- "K:\\Models\\MDOT_MMA\\Chapter30_Scoring\\Ch30_2021\\GTFS\\New_Project_Feeds\\AnneArundelCounty2021\\shapes.shp"
stops_file <- "K:\\Models\\MDOT_MMA\\Chapter30_Scoring\\Ch30_2021\\GTFS\\New_Project_Feeds\\AnneArundelCounty2021\\AnneArundelCounty_2021_Stops.shp"
routes <- st_read(route_file,
quiet = TRUE) %>%
st_transform(2248)
stops <- st_read(stops_file,
quiet = TRUE) %>%
st_transform(2248)
pal <- rpg_color_pal("rpg_colors")(2)
tm_shape(routes) +
tm_lines("route", palette = pal, lwd = 3,
title.col = "Route") +
tm_shape(stops) +
tm_dots(col = "#8400a8", id = "Name",
popup.vars = "stop_name",
labels = "Name", size = 0.1) +
tm_basemap ("Esri.WorldGrayCanvas")
tmap_mode("view")
tt_savings_average <- st_read("K:\\Models\\MDOT_MMA\\Chapter30_Scoring\\Ch30_2020\\MMA_scores\\TravelTimeSavings\\TTSavings_average.dbf", quiet=TRUE)
study_zones <- st_read("K:\\Models\\MDOT_MMA\\Chapter30_Scoring\\Ch30_2021\\Land_use\\Lvl_2_Zones_12192017.shp", quiet = TRUE) %>%
st_transform(2248) %>%
select(LVL_2_NEW, ACRES, FIPS, COUNTY) %>%
ms_simplify()
score_summary_sf <- left_join(study_zones,
tt_savings_average,
by = c("LVL_2_NEW" = "ZONE")) %>%
drop_na("AvgTTChg") %>%
filter(AvgTTChg > .01)
study_area <- st_read("geo/shapefiles/US_29_BRT_study_area.shp", quiet = TRUE) %>%
st_transform(2248)
pal <- rpg_color_pal("rpg_colors")(8)
tm_shape(tt_savings_average_sf) +
tm_polygons("AvgTTChg", title = "Avg. Travel Time Savings", n = 8, palette = pal, lwd = 0.5, alpha = .9, id = "AvgTTChg", textNA = "NA") +
tm_shape(study_area) +
tm_borders(col = "#8400a8", lwd = 1.5) +
tm_shape(us29_stops) +
tm_dots(col = "#58585B", id = "Name", popup.vars = "Name", labels = "US29 BRT Stops", scale = 1) +
tm_add_legend(type = "fill", col  = "#8400a8", labels = "Study Area Boundary") +
tm_layout("Build Network", legend.outside = TRUE, title.color = "#58585B", legend.text.color = "#58585B", attr.color = "#58585B")
score_summary <- read_csv("K:\\Models\\MDOT_MMA\\Chapter30_Scoring\\Ch30_2021\\MMA_scores\\summarise\\summarized_scores.csv")
zones <- st_read("K:\\Models\\MDOT_MMA\\Chapter30_Scoring\\Ch30_2021\\Land_use\\Lvl_2_Zones_12192017.shp") %>%
dplyr::select(LVL_2_NEW, ACRES, FIPS, COUNTY, MD_REGION) %>%
st_transform(2248) %>%
ms_simplify()
score_summary
score_summary %>% filter(change>0)
pal <- rpg_color_pal("rpg_colors")(5)
tm_shape(study_area_analysis) +
tm_borders(col = "#8400a8", lwd = 1.5) + tm_fill(alpha = 0.5,
col = "county", palette = pal) +
tm_shape(stops) + tm_dots(col = "white") +
tm_add_legend(type = "fill", col  = "#8400a8", labels = "Study Area Boundary") +
tm_basemap ("Esri.WorldStreetMap")
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)
require(sf)
require(tmap)
require(rmapshaper)
require(dplyr)
require(kableExtra)
require(readr)
require(tidyr)
require(rpgcolorsr)
require(classInt)
require(tigris)
require(janitor)
options(scipen=999)
stops_file <- "K:\\Models\\MDOT_MMA\\Chapter30_Scoring\\Ch30_2021\\GTFS\\New_Project_Feeds\\AnneArundelCounty2021\\AnneArundelCounty_2021_Stops.shp"
stops <- st_read(stops_file,
quiet = TRUE) %>%
st_transform(2248)
score_summary <- read_csv("K:\\Models\\MDOT_MMA\\Chapter30_Scoring\\Ch30_2021\\MMA_scores\\summarise\\summarized_scores.csv")
zones <- st_read("K:\\Models\\MDOT_MMA\\Chapter30_Scoring\\Ch30_2021\\Land_use\\Lvl_2_Zones_12192017.shp",
quiet = T) %>%
dplyr::select(LVL_2_NEW, ACRES, FIPS, COUNTY, MD_REGION) %>%
st_transform(2248) %>%
ms_simplify()
score_summary_sf <- left_join(zones, score_summary,
by = c("LVL_2_NEW" = "origin")) %>%
filter(study_zone == "yes")
study_area_boundary <- ms_dissolve(filter(score_summary_sf, study_zone == "yes"))
md_counties <- counties(state = "MD", cb = T,
progress_bar = FALSE) %>%
st_transform(2248) %>%
dplyr::select(NAME) %>%
rename(county = NAME)
study_area_analysis <- ms_dissolve(filter(score_summary_sf, study_zone == "yes")) %>%
select(-rmapshaperid) %>%
st_intersection(md_counties) %>%
mutate(sq_miles = as.numeric(st_area(.))/27878400)
tmap_mode("view")
pal <- rpg_color_pal("rpg_colors")(5)
tm_shape(study_area_analysis) +
tm_borders(col = "#8400a8", lwd = 1.5) + tm_fill(alpha = 0.5,
col = "county", palette = pal) +
tm_shape(stops) + tm_dots(col = "white") +
tm_add_legend(type = "fill", col  = "#8400a8", labels = "Study Area Boundary") +
tm_basemap ("Esri.WorldStreetMap")
pal <- rpg_color_pal("rpg_rainbow_no_grey")(5)
tm_shape(study_area_analysis) +
tm_borders(col = "#8400a8", lwd = 1.5) + tm_fill(alpha = 0.5,
col = "county", palette = pal) +
tm_shape(stops) + tm_dots(col = "white") +
tm_add_legend(type = "fill", col  = "#8400a8", labels = "Study Area Boundary") +
tm_basemap ("Esri.WorldStreetMap")
md_counties <- counties(state = "MD", cb = T,
progress_bar = FALSE) %>%
st_transform(2248) %>%
dplyr::select(NAME) %>%
rename(county = NAME)
study_area_analysis <- ms_dissolve(filter(score_summary_sf, study_zone == "yes")) %>%
select(-rmapshaperid) %>%
st_intersection(md_counties) %>%
mutate(sq_miles = as.numeric(st_area(.))/27878400)
tmap_mode("view")
pal <- rpg_color_pal("rpg_rainbow_no_grey")(5)
tm_shape(study_area_analysis) +
tm_borders(col = "#8400a8", lwd = 1.5) + tm_fill(alpha = 0.5,
col = "county",
palette = pal) +
tm_shape(stops) + tm_dots(col = "white") +
tm_add_legend(type = "fill", col  = "#8400a8",
labels = "Study Area Boundary") +
tm_basemap ("Esri.WorldStreetMap")
tm_shape(study_area_analysis) +
tm_borders(col = "#8400a8", lwd = 1.5) + tm_fill(alpha = 0.7,
col = "county",
palette = pal) +
tm_shape(stops) + tm_dots(col = "white") +
tm_add_legend(type = "fill", col  = "#8400a8",
labels = "Study Area Boundary") +
tm_basemap ("Esri.WorldStreetMap")
tm_shape(study_area_analysis) +
tm_borders(col = "#8400a8", lwd = 1.5) + tm_fill(alpha = 0.5,
col = "county",
palette = pal) +
tm_shape(stops) + tm_dots(col = "white") +
tm_add_legend(type = "fill", col  = "#8400a8",
labels = "Study Area Boundary") +
tm_basemap ("Esri.WorldStreetMap")
tm_shape(study_area_analysis) +
tm_borders(col = "county", lwd = 1.5) + tm_fill(alpha = 0.5,
col = "county",
palette = pal) +
tm_shape(stops) + tm_dots(col = "white") +
tm_add_legend(type = "fill", col  = "#8400a8",
labels = "Study Area Boundary") +
tm_basemap ("Esri.WorldStreetMap")
tm_shape(study_area_analysis) +
tm_borders(col = "#8400a8", lwd = 1.5) + tm_fill(alpha = 0.5,
col = "county",
palette = pal) +
tm_shape(stops) + tm_dots(col = "white") +
tm_add_legend(type = "fill", col  = "#8400a8",
labels = "Study Area Boundary") +
tm_basemap ("Esri.WorldStreetMap")
final_scores <- read_csv("K:\\Models\\MDOT_MMA\\Chapter30_Scoring\\Ch30_2021\\Documentation\\final_scores.csv.shp")
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)
require(sf)
require(tmap)
require(tmaptools)
require(rmapshaper)
require(dplyr)
require(kableExtra)
require(readr)
require(tidyr)
require(rpgcolorsr)
options(scipen=999)
stops_file <- "K:\\Models\\MDOT_MMA\\Chapter30_Scoring\\Ch30_2021\\GTFS\\New_Project_Feeds\\AnneArundelCounty2021\\AnneArundelCounty_2021_Stops.shp"
stops <- st_read(stops_file,
quiet = TRUE) %>%
st_transform(2248)
general_area <- st_bbox(stops) %>%
st_as_sfc() %>%
st_buffer(1320)
route_file <- "K:\\Models\\MDOT_MMA\\Chapter30_Scoring\\Ch30_2021\\GTFS\\New_Project_Feeds\\AnneArundelCounty2021\\shapes.shp"
routes <- st_read(route_file,
quiet = TRUE) %>%
st_transform(2248)
final_scores <- read_csv("K:\\Models\\MDOT_MMA\\Chapter30_Scoring\\Ch30_2021\\Documentation\\final_scores.csv.shp")
tmap_mode("view")
route_file <- "K:\\Models\\MDOT_MMA\\Chapter30_Scoring\\Ch30_2021\\GTFS\\New_Project_Feeds\\AnneArundelCounty2021\\shapes.shp"
stops_file <- "K:\\Models\\MDOT_MMA\\Chapter30_Scoring\\Ch30_2021\\GTFS\\New_Project_Feeds\\AnneArundelCounty2021\\AnneArundelCounty_2021_Stops.shp"
routes <- st_read(route_file,
quiet = TRUE) %>%
st_transform(2248)
stops <- st_read(stops_file,
quiet = TRUE) %>%
st_transform(2248)
pal <- rpg_color_pal("rpg_colors")(2)
tm_shape(routes) +
tm_lines("route", palette = pal, lwd = 3,
title.col = "Route") +
tm_shape(stops) +
tm_dots(col = "#8400a8", id = "Name",
popup.vars = "stop_name",
labels = "Name", size = 0.1) +
tm_basemap ("Esri.WorldGrayCanvas")
score_summary <- read_csv("K:\\Models\\MDOT_MMA\\Chapter30_Scoring\\Ch30_2021\\MMA_scores\\summarise\\summarized_scores.csv")
zones <- st_read("K:\\Models\\MDOT_MMA\\Chapter30_Scoring\\Ch30_2021\\Land_use\\Lvl_2_Zones_12192017.shp",
quiet = T) %>%
dplyr::select(LVL_2_NEW, ACRES, FIPS, COUNTY, MD_REGION) %>%
st_transform(2248) %>%
ms_simplify()
score_summary_sf <- left_join(zones, score_summary,
by = c("LVL_2_NEW" = "origin")) %>%
filter(study_zone == "yes")
study_area_boundary <- ms_dissolve(filter(score_summary_sf, study_zone == "yes"))
tm_shape(filter(score_summary_sf, study_zone == "yes")) +
tm_borders(col = "#8400a8", lwd = 1.5) + tm_fill(alpha = 0.1, col = "#8400a8") +
tm_add_legend(type = "fill", col  = "#8400a8", labels = "Study Area Boundary") +
tm_basemap ("Esri.WorldStreetMap")
pal <- rpg_color_pal("rpg_colors")(4)
tm_shape(score_summary_sf) +
tm_polygons("change",
title = "Change in Accessibility to Jobs",
n = 4, style = "jenks", palette = pal,
lwd = 0.5, alpha = 0.9,
id = "change", textNA = "NA") +
tm_shape(study_area_boundary) +
tm_borders(col = "#8400a8", lwd = 1.5) +
tm_add_legend(type = "fill", col  = "#8400a8",
labels = "Study Area Boundary") +
tm_shape(stops) +
tm_dots(col = "#58585B", id = "stop_name",
popup.vars = "stop_name",
labels = "Project Stops", scale = 1,
border.col = "white") +
tm_basemap ("Esri.WorldGrayCanvas")
final_scores <- read_csv("K:\\Models\\MDOT_MMA\\Chapter30_Scoring\\Ch30_2021\\Documentation\\final_scores.csv.shp")
final_scores <- read_csv("K:\\Models\\MDOT_MMA\\Chapter30_Scoring\\Ch30_2021\\Documentation\\final_scores.csv")
print(kable(final_scores, col.names = c("Measure", "2020")) %>% kable_styling())
print(kable(final_scores, col.names = c("Measure", "2021")) %>% kable_styling())
print(kable(final_scores, col.names = c("Measure", "2021"), format = (big.mark = ",", scientific = FALSE)) %>% kable_styling())
print(kable(final_scores, col.names = c("Measure", "2021"), format = (big.mark = ",")) %>% kable_styling())
print(kable(final_scores, col.names = c("Measure", "2021"), digits = 3, format.args = list(big.mark = ",",
scientific = FALSE)) %>% kable_styling())
print(kable(final_scores, col.names = c("Measure", "2021"),
digits = 3, format.args = list(big.mark = ",",
scientific = FALSE)) %>%
kable_styling())
pal <- rpg_color_pal("rpg_colors")(17)
breaks <- classIntervals(score_summary_sf$build, 17, style = "jenks")
nobuild_map <- tm_shape(score_summary_sf) +
tm_polygons("nobuild",
title = "Base Accessibility to Jobs",
palette = pal, style = "fixed",
breaks = breaks$brks,
lwd = 0.5, alpha = 0.9,
id = "change", textNA = "NA") +
tm_shape(study_area_boundary) +
tm_borders(col = "#8400a8", lwd = 1.5) +
tm_add_legend(type = "fill", col  = "#8400a8",
labels = "Study Area Boundary") +
tm_shape(stops) +
tm_dots(col = "#58585B", id = "stop_name",
popup.vars = "stop_name",
labels = "Project Stops", scale = 1,
border.col = "white") +
tm_basemap ("Esri.WorldGrayCanvas")
build_map <- tm_shape(score_summary_sf) +
tm_polygons("build",
title = "Build Accessibility to Jobs",
style = "fixed", palette = pal,
breaks = breaks$brks,
lwd = 0.5, alpha = 0.9,
id = "change", textNA = "NA") +
tm_shape(study_area_boundary) +
tm_borders(col = "#8400a8", lwd = 1.5) +
tm_add_legend(type = "fill", col  = "#8400a8",
labels = "Study Area Boundary") +
tm_shape(stops) +
tm_dots(col = "#58585B", id = "stop_name",
popup.vars = "stop_name",
labels = "Project Stops", scale = 1,
border.col = "white") +
tm_basemap ("Esri.WorldGrayCanvas")
tmap_arrange(nobuild_map, build_map, sync = T, ncol = 1)
study_area_analysis %>%
st_drop_geometry() %>%
adorn_totals(where = "row", fill = "-", na.rm = TRUE, name = "Total") %>%
kbl(col.names = c("County", "Sq. Miles in Study Area"), digits = 2) %>%
kable_paper("hover", full_width = F)
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)
require(sf)
require(tmap)
require(rmapshaper)
require(dplyr)
require(kableExtra)
require(readr)
require(tidyr)
require(rpgcolorsr)
require(classInt)
require(tigris)
require(janitor)
options(scipen=999)
rmarkdown::render_site()
